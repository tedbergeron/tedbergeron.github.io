<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Ted Bergeron ]]></title><description><![CDATA[a blog about tech]]></description><link>https://tedbergeron.github.io</link><generator>RSS for Node</generator><lastBuildDate>Tue, 23 Aug 2016 04:19:12 GMT</lastBuildDate><atom:link href="https://tedbergeron.github.io/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Preserving Content]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>I attended the Scripting News meetup in Portland on Friday and got a chance to meet <a href="http://davewiner.com/">Dave Winer</a>.</p>
</div>
<div class="paragraph">
<p>The topic of preserving content came up which is a very important to me.</p>
</div>
<div class="sidebarblock">
<div class="content">
<div class="paragraph">
<p>How can we preserve content so it is not trapped in old, obsolete hardware or software?</p>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_continuous_migration">Continuous Migration</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I started blogging in 2000 when I read an article about <a href="http://beebot.com/1999/09/09/what-is-a-weblog/">"weblogs"</a>.</p>
</div>
<div class="paragraph">
<p>Since <a href="http://beebot.com/">my website</a> was already data-driven, it was pretty trivial to add a weblog category.
I used <a href="https://en.wikipedia.org/wiki/BBCode">bulletin board code</a> and wrote a simple parser to add bold and italics to plain text.
This was before AsciiDoc or Markdown were invented.</p>
</div>
<div class="paragraph">
<p>Keeping my website online was an endless series of server changes that broke my code.</p>
</div>
<div class="paragraph">
<p>After a few years of fighting that, I took a break from maintaining my website and started using Blogger.com.</p>
</div>
<div class="paragraph">
<p>But all my old posts were now stuck in a database.
And my website code used to fetch those posts no longer worked.</p>
</div>
<div class="paragraph">
<p>This is the root of the problem we discussed at the meetup.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_preserving_content_as_text">Preserving content as text</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Ward Cunningham shared his story of trying to resurrect the work he&#8217;d done with HyperCard.
His solution for today is to move all the content into JSON stored as simple text.
Take a look at his latest invention; <a href="http://fed.wiki.org/view/welcome-visitors">Federated Wiki</a>.
Click on the JSON link at the bottom of each page to see what that looks like.</p>
</div>
<div class="paragraph">
<p>I&#8217;ve come to the same realization.
If I want to preserve the content into the future, it&#8217;s going to be in a format that will still be around in 20 years.</p>
</div>
<div class="paragraph">
<p>So I&#8217;m slowly dredging up my old content out of old databases and saving the text into <strong>text files</strong>.</p>
</div>
<div class="paragraph">
<p>I&#8217;m formatting my text using <a href="http://asciidoctor.org/docs/what-is-asciidoc/">AsciiDoc</a>, which is like a super-set of Markdown.</p>
</div>
<div class="paragraph">
<p>Then I use a static website generator called <a href="http://gohugo.io/">Hugo</a> to build my websites.
Hugo can use JSON as the front matter.
It uses <a href="http://asciidoctor.org/">Asciidoctor</a> to render the formatting before building the website.</p>
</div>
<div class="paragraph">
<p>Hopefully I&#8217;ve minimized the migration frustration now that my content is in plain text.
Twenty years from now I should still be able to open and read my text files.</p>
</div>
</div>
</div>]]></description><link>https://tedbergeron.github.io/2016/08/22/Preserving-Content.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2016/08/22/Preserving-Content.html</guid><category><![CDATA[Asciidoctor]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Mon, 22 Aug 2016 00:00:00 GMT</pubDate></item><item><title><![CDATA[How to build a website with Asciidoctor]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Take a look at this demo of website I made <em>only using Asciidoctor</em> and with <strong>one command</strong>. <a href="http://tedbergeron.github.io/SiteMadeWithAsciidoctor/" class="bare">http://tedbergeron.github.io/SiteMadeWithAsciidoctor/</a></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_how_to">How To</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Start by downloading the files in my <a href="https://github.com/tedbergeron/SiteMadeWithAsciidoctor">GitHub Repo</a>sitory.
Edit the content in the text files marking them up with AsciiDoc.</p>
</div>
<div class="paragraph">
<p>I am using a header and footer that is included on the index and page one AsciiDoc text file.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_to_render_the_pages">To render the pages</h2>
<div class="sectionbody">
<div class="paragraph">
<p>At the command prompt</p>
</div>
<div class="literalblock">
<div class="content">
<pre>&gt; asciidoctor *.txt</pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_push_or_ftp">Push or FTP</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Push your files back to your GitHub 'gh-pages' branch.</p>
</div>
<div class="paragraph">
<p>Or just FTP the .html files that were generated to your own website.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_that_s_it_you_re_done">That&#8217;s it, you&#8217;re done.</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Following is some additional information to customize your website.</p>
</div>
<div class="sect3">
<h4 id="_use_different_asciidoctor_themes">Use Different Asciidoctor Themes</h4>
<div class="paragraph">
<p>I&#8217;ve included a couple themes in the styles directory in the repository. To use them.</p>
</div>
<div class="paragraph">
<p>At the command prompt</p>
</div>
<div class="literalblock">
<div class="content">
<pre>&gt; asciidoctor -a stylesheet=styles/maker.css  *.txt</pre>
</div>
</div>
<div class="paragraph">
<p>If you&#8217;d like to use the colony stylesheet use</p>
</div>
<div class="literalblock">
<div class="content">
<pre>&gt; asciidoctor -a stylesheet=styles/colony.css  *.txt</pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tr>
<td class="icon">
<i class="fa icon-note" title="Note"></i>
</td>
<td class="content">
You can get other themes and preview them here: <a href="http://themes.asciidoctor.org/" class="bare">http://themes.asciidoctor.org/</a>
</td>
</tr>
</table>
</div>
</div>
<div class="sect3">
<h4 id="_smart_links">Smart Links</h4>
<div class="paragraph">
<p>I&#8217;m using Asciidoctor 'smart links' to convert the file extension ".adoc" or ".txt" to ".html"</p>
</div>
<div class="literalblock">
<div class="content">
<pre>&lt;&lt;page2.adoc#,Smart Link to page 2&gt;&gt;
or
&lt;&lt;page2.txt#,Smart Link to page 2&gt;&gt;</pre>
</div>
</div>
<div class="paragraph">
<p>both renders as a link</p>
</div>
<div class="literalblock">
<div class="content">
<pre>href="page2.html"</pre>
</div>
</div>
</div>
<div class="sect3">
<h4 id="_ignore_the_extra_files">Ignore the Extra Files</h4>
<div class="paragraph">
<p>This method will render the header.txt and footer.txt into html files too. But since they&#8217;re not linked to anything, it&#8217;s fine for them to live along side the others.</p>
</div>
<div class="paragraph">
<p>You could get organized and put all the Asciidoc text files into a sub-directory, but I&#8217;ll leave that to you to figure out the logistics.</p>
</div>
<div class="paragraph">
<p>My goal was to generate the simplest website using the most minimal command.</p>
</div>
</div>
<div class="sect3">
<h4 id="_why_don_t_you_use_adoc_files">Why don&#8217;t you use .adoc files?</h4>
<div class="paragraph">
<p>Typically you see AsciiDoc files with an .adoc or .asciidoc file extension. But since they are just text files and since Asciidoctor will try to render any text file you feed it, I choose to use .txt so people can easily edit the files in Notepad.</p>
</div>
</div>
<div class="sect3">
<h4 id="_additional_info">Additional Info</h4>
<div class="ulist">
<ul>
<li>
<p><a href="http://asciidoctor.org/docs/what-is-asciidoc/">What is AsciiDoc?</a></p>
</li>
<li>
<p><a href="http://asciidoctor.org/docs/#get-started-with-asciidoctor">Get Started with Asciidoctor</a></p>
</li>
</ul>
</div>
</div>
</div>
</div>]]></description><link>https://tedbergeron.github.io/2015/08/16/How-to-build-a-website-with-Asciidoctor.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/08/16/How-to-build-a-website-with-Asciidoctor.html</guid><category><![CDATA[Asciidoctor]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Sun, 16 Aug 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Shifting Priorities, Pick One]]></title><description><![CDATA[<div class="paragraph">
<p>Often during times of extreme workloads this little project management technique can work wonders for your dev team that is faced with too many project deadlines or too much scope creep.</p>
</div>
<div class="paragraph">
<p>Try using this script when dealing with project owners.</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>You said your top priority was the ABC project.</p>
</div>
<div class="paragraph">
<p>Now you say your top priority is this new XYZ project.</p>
</div>
<div class="paragraph">
<p>So we are going to <em>stop</em> work on the old ABC project and start work on the new XYZ one. Is that really what you want?</p>
</div>
<div class="paragraph">
<p>Okay then the old ABC project is not going to get done by 'end of quarter' [insert former completion goal date here]</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>The concept is to get the project owner to pick their top priority and acknowledge that their choice of shifting priorities or adding to the scope of the project has just pushed the former completion goal date into the future.</p>
</div>
<div class="paragraph">
<p>This gives the project owner an opportunity to re-evaluate their top priority on the spot.</p>
</div>
<div class="paragraph">
<p>And it can be a quick, informal conversation that works just like the formal process of making them sign off on project changes.</p>
</div>
<div class="paragraph">
<p>Either way it gives the development team the reaffirmation that they are working on the project owner&#8217;s top priority.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
This is very important from a team morale standpoint because the dev team now knows they no longer should be working on the old ABC project at this time. And that the project owner just acknowledged that <em>they</em> just pushed back the deadline for the old ABC project.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>Later if the project owner complains that the original deadline for old ABC project goes past, you can list <em>their</em> choice to move the dev team on to the XYZ project which moved the deadline.
You just have to keep track of their choices and how long it takes to accomplish them. Of course YMMV (your mileage may vary) in the business world, but at least you have a strong, written justification of what happened.</p>
</div>
<div class="paragraph">
<p>Also each time you meet with that project owner, you start by asking: <em>'We are still working on the new XYZ project, is that still your top priority?'</em></p>
</div>
<div class="paragraph">
<p>Then you can go on to talk about any new projects and finish the meeting with <em>'Okay we&#8217;ll put today&#8217;s discussion of changes in the backlog and keep working on the new XYZ project'.</em></p>
</div>]]></description><link>https://tedbergeron.github.io/2015/07/13/Shifting-Priorities-Pick-One.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/07/13/Shifting-Priorities-Pick-One.html</guid><category><![CDATA[Project-Management]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Mon, 13 Jul 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Local AsciiDoc Website]]></title><description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>In my <a href="http://tedbergeron.github.io/2015/03/29/Atom-Editor-AsciiDoc.html">last post</a> I briefly mentioned how you could make a local website out of your docs using only</p>
</div>
<div class="ulist">
<ul>
<li>
<p>A text editor, like Notepad</p>
</li>
<li>
<p>A browser extension in Chrome <a href="https://chrome.google.com/webstore/detail/asciidoctorjs-live-previe/iaalpfgpbocpdfblpnhhgllgbdbchmia?hl=en-US">Asciidoctor.js Live Preview</a></p>
</li>
<li>
<p>And some AsciiDoc links</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>I have a lot of documentation that I update and refer to everyday. It is marked up with AsciiDoc. I find the best way to work with it is to organize all my docs and link them together into a mini-website on my laptop.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_templates_to_get_you_started">Templates to get you started</h2>
<div class="sectionbody">
<div class="paragraph">
<p>To get you started, I&#8217;ve created a few docs and linked them together so you can quickly see how this works.</p>
</div>
<div class="paragraph">
<p>Start by cloning this repo:  <a href="https://github.com/tedbergeron/Asciidoctor-LivePreview-Website">Asciidoctor-LivePreview-Website</a></p>
</div>
<div class="paragraph">
<p>You can just download the .ZIP and place the files together in a directory.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_asciidoctor_js_live_preview">Asciidoctor.js Live Preview</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Install the Asciidoctor.js Live Preview in your browser if you don&#8217;t already have it</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Chrome: <a href="https://chrome.google.com/webstore/detail/asciidoctorjs-live-previe/iaalpfgpbocpdfblpnhhgllgbdbchmia?hl=en-US">Asciidoctor.js Live Preview</a></p>
</li>
<li>
<p>Firefox: <a href="https://addons.mozilla.org/en-us/firefox/addon/asciidoctorjs-live-preview/?src=search">Asciidoctor.js Live Preview</a> (not as full-featured as Chrome one yet)</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Set the options for it</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Safe mode: <em>unsafe</em></p>
</li>
<li>
<p>Preview .txt files: <span class="icon black"><i class="fa fa-check"></i></span> <em>(so you can use these .txt files in addition to .adoc files)</em></p>
</li>
<li>
<p>Click save.</p>
</li>
</ul>
</div>
<div class="admonitionblock warning">
<table>
<tr>
<td class="icon">
<i class="fa icon-warning" title="Warning"></i>
</td>
<td class="content">
If you are using Firefox change all your file extensions to .adoc because there&#8217;s no option to use .txt at this time.
</td>
</tr>
</table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_open_the_index_txt_in_your_browser">Open the index.txt in your browser</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Find the directory where you copied the text files from the <a href="https://github.com/tedbergeron/Asciidoctor-LivePreview-Website">Asciidoctor-LivePreview-Website</a> repo.</p>
</div>
<div class="paragraph">
<p>Right-click on index.txt and open with Chrome.</p>
</div>
<div class="paragraph">
<p>You should see it open and render like a mini-website. Click around and test it out.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_start_editing_it">Start Editing it.</h2>
<div class="sectionbody">
<div class="paragraph">
<p>When you take look at the text files you&#8217;ll notice that the index.txt file has</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-AsciiDoc" data-lang="AsciiDoc"> include::header.txt[]

 include::footer.txt[]</code></pre>
</div>
</div>
<div class="paragraph">
<p>You can use those in all your docs to create a navigation menu at the top and a mini-sitemap at the bottom. You&#8217;ll find header.txt and footer.txt in the repository. I&#8217;ve used AsciiDoc tables to make the columns.</p>
</div>
<div class="paragraph">
<p>Or leave them off and just add a link back to the index.txt page</p>
</div>
<div class="paragraph">
<p>I usually edit in one window on the left and preview the changes in Chrome on the right.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_linking_your_docs_together">Linking your docs together</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The main AsciiDoc code you&#8217;ll need to hook your docs together is link. It&#8217;s pretty straight forward to use. It looks like this:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="highlight"><code class="language-AsciiDoc" data-lang="AsciiDoc">link:AnotherDocument.txt[Another Document]</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_bookmark_your_index_txt_file">Bookmark your index.txt file</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Don&#8217;t forget to bookmark your main doc. If index.txt seems too 'WebDev' like, you might want to name it README.txt. Then write links to all your other docs creating a simple website.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_not_quite_a_wiki">Not quite a wiki</h2>
<div class="sectionbody">
<div class="paragraph">
<p>It is not the same as a wiki but it is so simple to edit you might think it&#8217;s better than a wiki. Store your files in a repository and you&#8217;ll even have the history of changes you make.</p>
</div>
<div class="paragraph">
<p>You could build an intranet site on your network using this concept.</p>
</div>
</div>
</div>]]></description><link>https://tedbergeron.github.io/2015/04/09/Local-Ascii-Doc-Website.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/04/09/Local-Ascii-Doc-Website.html</guid><category><![CDATA[Asciidoctor]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Thu, 09 Apr 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Atom Editor for AsciiDoc]]></title><description><![CDATA[<div class="sect1">
<h2 id="_why_asciidoc">Why AsciiDoc?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I&#8217;ve used Markdown for years but last year I heard about AsciiDoc at <a href="http://www.writethedocs.org/">Write The Docs</a> 2014 conference. Then I quickly discovered <a href="http://asciidoctor.org/">Asciidoctor</a> and I&#8217;ve never looked back.</p>
</div>
<div class="paragraph">
<p>AsciiDoc is like a superset of Markdown and since Asciidoctor renders Markdown too,  it was easy for me to just start using AsciiDoc.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_fast_start_with_asciidoc">Fast Start with AsciiDoc</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I think the fastest way to get started is to install the <a href="https://chrome.google.com/webstore/detail/asciidoctorjs-live-previe/iaalpfgpbocpdfblpnhhgllgbdbchmia?hl=en-US">Asciidoctor.js Live Preview</a> extension for Chrome.</p>
</div>
<div class="paragraph">
<p>Set the options for it</p>
</div>
<div class="ulist">
<ul>
<li>
<p>Safe mode: unsafe <em>(because you&#8217;ll want to do all the cool stuff with it)</em></p>
</li>
<li>
<p>Preview .txt files: <span class="icon black"><i class="fa fa-check"></i></span> <em>(so you can use .txt in addition to .adoc)</em></p>
</li>
<li>
<p>Theme / Stylesheet: <em>(colony or maker are my favorites)</em></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Click save.</p>
</div>
<div class="paragraph">
<p>Open your favorite text editor and start writng. Format your doc with AsciiDoc. Here&#8217;s some links to get you started with the syntax:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><span class="icon yellow"><i class="fa fa-star"></i></span> <a href="http://powerman.name/doc/asciidoc">AsciiDoc cheatsheet</a></p>
</li>
<li>
<p><span class="icon yellow"><i class="fa fa-star"></i></span> <a href="http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/">Asciidoctor Syntax Quick Reference</a></p>
</li>
<li>
<p><span class="icon yellow"><i class="fa fa-star"></i></span> <a href="http://asciidoctor.org/docs/user-manual/#doc-header">Asciidoctor User Manual: syntax</a></p>
</li>
</ul>
</div>
<div class="paragraph">
<p>Open your text file in Chrome to start previewing it. <strong>Have your text editor open right next to Chrome</strong> so you have a side-by-side editor|viewer. Each time you save you&#8217;ll see your changes rendered in Chrome.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<strong>Pro Tip:</strong> Bookmark your AsciiDoc text file. Then write links to all your other docs creating a simple wiki or intranet site on your computer; powered by this browser extension and a text editor.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p><a href="https://addons.mozilla.org/en-us/firefox/addon/asciidoctorjs-live-preview/?src=search">Asciidoctor.js Live Preview</a> is also available for Firefox but it is not as mature as the Chrome version as of the time of this writing. But I&#8217;m sure it will catch up quickly.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_atom_editor_span_class_icon_i_class_fa_fa_github_alt_i_span">Atom Editor <span class="icon"><i class="fa fa-github-alt"></i></span></h2>
<div class="sectionbody">
<div class="quoteblock">
<blockquote>
In my opinion the <a href="https://atom.io/">Atom Editor</a> is the best editor for working with AsciiDoc files. It&#8217;s free and it works on Linux, Mac and Windows.
</blockquote>
<div class="attribution">
&#8212; Ted Bergeron
</div>
</div>
<div class="paragraph">
<p>You&#8217;ll need these two packages for the <a href="https://atom.io/">Atom Editor</a> to make working with AsciiDoc a dream. Go to File &gt; Settings &gt; Install. Search for 'AsciiDoc'. Both of these are by 'asciidoctor'</p>
</div>
<div class="ulist">
<ul>
<li>
<p><strong>language-asciidoc</strong> <span class="icon green"><i class="fa fa-check"></i></span></p>
</li>
<li>
<p><strong>asciidoc-preview</strong> <span class="icon green"><i class="fa fa-check"></i></span></p>
</li>
</ul>
</div>
<div class="sect2">
<h3 id="_language_asciidoc_for_syntax_highlighting">language-asciidoc for syntax highlighting</h3>
<div class="paragraph">
<p>This package gives you beautiful syntax highlighting for AsciiDoc files. It automatically detects .adoc files. But I use .txt files. To get the syntax highlighting to lightup, click the Plain Text in the lower right-hand status bar and select AsciiDoc from the drop-down.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
<strong>Using .txt</strong> First your spell checker is going to work. Secondly I think it is an advantage to use .txt files in the repository so after I&#8217;m long gone, anyone can still open the files and work with them; even if they&#8217;ve never heard of AsciiDoc formatting. Although it would be a simple command to change file extentions from .adoc back to .txt.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>Experiment with different Atom themes to find syntax colors that work best for you.</p>
</div>
</div>
<div class="sect2">
<h3 id="_asciidoc_preview_for_live_previewing">asciidoc-preview for live previewing</h3>
<div class="paragraph">
<p>The asciidoc-preview package gives you the perfect side-by-side editor|viewer for working with your text files.</p>
</div>
<div class="paragraph">
<div class="title">Toggle Preview (Ctrl+Shift+A)</div>
<p>To toggle the preview window use Packages &gt; AsciiDoc &gt; Toggle Preview (Ctrl+Shift+A)</p>
</div>
<div class="paragraph">
<div class="title">Toggle Soft Wrap</div>
<p>You might also want to use menu View &gt; Toggle Soft Wrap so you can see all your text in the editor pane. You can toggle it on by default in File &gt; Settings &gt; Editor Settings &gt; Soft Wrap.</p>
</div>
<div class="admonitionblock important">
<table>
<tr>
<td class="icon">
<i class="fa icon-important" title="Important"></i>
</td>
<td class="content">
<strong>Windows Version:</strong> If the AsciiDoc Toggle Preview (Ctrl+Shift+A) has stopped working in Windows version of Atom Editor. Find menu File &gt; Open Your Keymap. It will likely be a empty file. Add this code and save it:
</td>
</tr>
</table>
</div>
<div class="listingblock">
<div class="title">keymap file</div>
<div class="content">
<pre class="highlight"><code class="language-cson" data-lang="cson">'atom-workspace, atom-workspace atom-text-editor':
  'ctrl-shift-a': 'asciidoc-preview:toggle'
  'ctrl-alt-a': 'asciidoc-preview:toggle-render-on-save-only'</code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_line_ending_converter_for_windows">line-ending-converter for Windows</h3>
<div class="paragraph">
<p>When you open text files that have been edited with Atom in Notepad you might find it only has line-feeds ("\n") and no Windows carriage returns ("\r\n"). There is another package to convert line endings called <strong>line-ending-converter</strong></p>
</div>
<div class="paragraph">
<p>Use menu Packages &gt; Convert Line Endings To &gt; Windows Format</p>
</div>
<div class="paragraph">
<p>and save.</p>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_other_editors">Other Editors?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Of course there are other editors that handle AsciiDoc as well. Brackets has a previewer. Vim, Sublime Text and NotePad++ have syntax highlighting. But I&#8217;ll stick with Atom. It works on my Windows and Linux machines.</p>
</div>
</div>
</div>]]></description><link>https://tedbergeron.github.io/2015/03/29/Atom-Editor-for-Ascii-Doc.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/03/29/Atom-Editor-for-Ascii-Doc.html</guid><category><![CDATA[Atom-Editor]]></category><category><![CDATA[ Asciidoctor]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Sun, 29 Mar 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[The future of apps]]></title><description><![CDATA[<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>To me the future is where you can develop web apps that access native features of the devices. You host it as a website because it <strong>is</strong> your website that just happens to be responsive.</p>
</div>
<div class="paragraph">
<p>The concept of getting "apps" from iTunes or Play Store becomes a thing of the past or morphs into a search engine of websites formerly called apps.</p>
</div>
<div class="paragraph">
<p>I&#8217;m so ready for the 21st century to get started.</p>
</div>
</blockquote>
<div class="attribution">
&#8212; Ted Bergeron
</div>
</div>]]></description><link>https://tedbergeron.github.io/2015/03/05/The-future-of-apps.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/03/05/The-future-of-apps.html</guid><category><![CDATA[web]]></category><category><![CDATA[ apps]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Thu, 05 Mar 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[We've all been warned]]></title><description><![CDATA[<div class="paragraph">
<p>about building a house upon the sand.</p>
</div>
<div class="quoteblock">
<div class="title">Software is like Sandcastles</div>
<blockquote>
<div class="paragraph">
<p>Software is basically building a sandcastle. With each turn of the tide, you’ll have shore up some walls and strengthen the foundation.</p>
</div>
<div class="paragraph">
<p>Often a high tide will require a complete rebuild.</p>
</div>
</blockquote>
<div class="attribution">
&#8212; Ted Bergeron
</div>
</div>
<div class="paragraph">
<p>I don’t like this analogy, but it is pretty true.</p>
</div>]]></description><link>https://tedbergeron.github.io/2015/02/11/Weve-all-been-warned.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/02/11/Weve-all-been-warned.html</guid><category><![CDATA[development]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Wed, 11 Feb 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Turn KDE Trackpad Off]]></title><description><![CDATA[<div class="paragraph">
<p>I use Slackware Linux on a DELL D630 laptop. I never use a mouse and I rely on the trackpad for all my mousing needs.</p>
</div>
<div class="paragraph">
<p>I was trying to adjust the brightness. DELL uses the Function (Fn) key + Up and Down Arrows.</p>
</div>
<div class="paragraph">
<p>I was trying to turn the brightness down and I accidentally pressed: Fn + (auto brightness) Left Arrow which apparently is a KDE keyboard-shortcut to turn off the touchpad permanently.</p>
</div>
<div class="paragraph">
<p>How handy&#8230;&#8203; Not! There is a popup message letting you know the touchpad has been turned off.</p>
</div>
<div class="paragraph">
<p>Now it is only turned off for the user that is logged in. I can&#8217;t find a keyboard shortcut for turning it back on.</p>
</div>
<div class="paragraph">
<p>So now every time I reboot, I have to get out a mouse and search for the trackpad and turn it back on.</p>
</div>
<div class="paragraph">
<p>Here&#8217;s what I have to do now each and every time I reboot. Open a terminal.</p>
</div>
<div class="literalblock">
<div class="content">
<pre># xinput list</pre>
</div>
</div>
<div class="paragraph">
<p>I usually find my touchpad on 11 or 12. It seems to jump around each boot. This is what it looks like</p>
</div>
<div class="literalblock">
<div class="content">
<pre>AlpsPS/2 DualPoint TouchPad id=12 [slave pointer (2)]</pre>
</div>
</div>
<div class="paragraph">
<p>So this time it is #12. Next run this command:</p>
</div>
<div class="literalblock">
<div class="content">
<pre># xinput set-prop 12 "Device Enabled" 1</pre>
</div>
</div>
<div class="paragraph">
<p>This immediately restores the trackpad.</p>
</div>
<div class="admonitionblock tip">
<table>
<tr>
<td class="icon">
<i class="fa icon-tip" title="Tip"></i>
</td>
<td class="content">
set-prop to whatever id number your touchpad is. I believe the 1 at the end means true.
</td>
</tr>
</table>
</div>
<div class="paragraph">
<p>I don&#8217;t know if there is a permanently way to restore the trackpad. I&#8217;m sure there is a setting somewhere. Of course I could create a new user.</p>
</div>]]></description><link>https://tedbergeron.github.io/2015/02/05/Turn-KDE-Trackpad-Off.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/02/05/Turn-KDE-Trackpad-Off.html</guid><category><![CDATA[Dell]]></category><category><![CDATA[ Trackpad]]></category><category><![CDATA[ Slackware]]></category><category><![CDATA[ KDE]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Thu, 05 Feb 2015 00:00:00 GMT</pubDate></item><item><title><![CDATA[Dell Numlock]]></title><description><![CDATA[<div class="paragraph">
<p>I figured out that to use the NumLock you have to turn it on, And then <strong>press and hold</strong> the Function (Fn) key in order to use the number pad on the keyboard.</p>
</div>
<div class="paragraph">
<p>I have an old Dell Latitude D630. This is the default setting. Another completely unintuitive default setting.</p>
</div>
<div class="paragraph">
<p>This is controlled by BIOS settings. Reboot and press F2 to get into the settings.</p>
</div>
<div class="paragraph">
<p>Find and change these two settings. One to use Numlock only. And another to turn Numlock off when booting.</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>I finally figured out how to use the NumLock key on my laptop</p>
</div>
</blockquote>
<div class="attribution">
&#8212; Ted Bergeron
</div>
</div>]]></description><link>https://tedbergeron.github.io/2015/02/03/Dell-Numlock.html</link><guid isPermaLink="true">https://tedbergeron.github.io/2015/02/03/Dell-Numlock.html</guid><category><![CDATA[Dell]]></category><category><![CDATA[ Numlock]]></category><category><![CDATA[ Slackware]]></category><dc:creator><![CDATA[Ted Bergeron]]></dc:creator><pubDate>Tue, 03 Feb 2015 00:00:00 GMT</pubDate></item></channel></rss>